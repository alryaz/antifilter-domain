name: Build geosite.dat
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set variables
        run: |
          echo "RELEASE_NAME=$(date +%Y-%m-%d)" >> $GITHUB_ENV
          echo "TAG_NAME=v$(date +%Y.%m.%d)" >> $GITHUB_ENV
        shell: bash

      - name: Download list
        run: |
          mkdir -p data
          curl -s https://antifilter.download/list/domains.lst | grep -v '[^a-z0-9.\-\s]' > data/antifilter
          curl -s -o data/antifilter-community https://community.antifilter.download/list/domains.lst
          curl -s https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/YouTube/YouTube.list | grep -oP 'DOMAIN-SUFFIX,\K.*' > data/youtube

      - name: Build separate dat files
        run: |
          for file in data/*; do
            name=$(basename $file)
            echo "Export list: $name"
            go run ./ --exportlists="${name}" --outputname="${name}.dat"
          done
          
      - name: Build single dat file
        run: |
          export_lists=$(cd data && ls -1 | sed 's/\.[^.]*$//' | paste -sd ',')
          echo "Export lists: ${export_lists}"
          go run ./ --exportlists="${export_lists}" --outputname=geosite.dat

      - name: Move data files to publish directory
        run: |
          mkdir -p publish
          mv ./*.dat ./publish

      - name: Rename lists to have extensions
        run: |
          for file in data/*; do
            cp "${file}" "publish/$(basename "${file}").list"
          done

      - name: Generate hashes for output files
        run: |
          for file in publish/*; do
            sha256sum "${file}" > "${file}.sha256sum"
          done

      - name: List publish directory
        run: |
          ls -R ./publish

      - name: Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.RELEASE_NAME }}
          files: publish/*
